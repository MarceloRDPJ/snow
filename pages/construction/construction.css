/* pages/construction/construction.css - Black Hole Redesign */

:root {
    --vortex-core: #2e003e; /* Deep, dark purple */
    --vortex-glow: #ff00ff; /* Vibrant magenta for the event horizon */
}

body {
    overflow: hidden;
    background-color: var(--color-bg);
    color: var(--text-primary);
    font-family: var(--font-main);
}

.vortex-container {
    position: relative;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.black-hole {
    position: relative;
    width: 40vmin;
    height: 40vmin;
    border-radius: 50%;
    animation: slow-rotate 20s linear infinite;
}

.event-horizon {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: radial-gradient(circle, var(--vortex-core) 0%, rgba(0,0,0,0) 70%);
    animation: pulse 4s ease-in-out infinite alternate;
}

.event-horizon::before,
.event-horizon::after {
    content: '';
    position: absolute;
    top: -5%;
    left: -5%;
    width: 110%;
    height: 110%;
    border-radius: 50%;
    border: 2px solid transparent;
    border-top-color: var(--vortex-glow);
    border-bottom-color: var(--vortex-glow);
    opacity: 0.8;
    filter: drop-shadow(0 0 5px var(--vortex-glow));
}

.event-horizon::before {
    animation: rotate 5s linear infinite;
}

.event-horizon::after {
    animation: rotate 10s linear infinite reverse;
    border-top-color: var(--text-secondary);
    border-bottom-color: var(--text-secondary);
    opacity: 0.4;
}

@keyframes slow-rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

@keyframes pulse {
    from {
        transform: scale(0.95);
        opacity: 0.8;
    }
    to {
        transform: scale(1.05);
        opacity: 1;
    }
}

/* Styling for elements being sucked into the vortex */
.sucked-in-element {
    position: absolute;
    transform-origin: center center; /* This is crucial for the scaling/rotating animation */
}

.fragment {
    background-color: var(--color-bg);
    border: 1px solid var(--text-secondary);
    box-shadow: 0 0 10px var(--vortex-glow);
}

#frag1 {
    width: 150px;
    height: 100px;
    top: 10vh;
    left: 15vw;
    clip-path: polygon(0% 0%, 100% 20%, 80% 100%, 20% 80%);
}

#frag2 {
    width: 100px;
    height: 80px;
    top: 25vh;
    right: 20vw;
    clip-path: polygon(20% 0%, 100% 40%, 80% 100%, 0% 60%);
}

#frag3 {
    width: 120px;
    height: 150px;
    bottom: 15vh;
    left: 25vw;
    clip-path: polygon(0% 20%, 80% 0%, 100% 80%, 20% 100%);
}

#frag4 {
    width: 80px;
    height: 120px;
    bottom: 20vh;
    right: 15vw;
    clip-path: polygon(20% 0%, 100% 20%, 80% 100%, 0% 80%);
}

.text-content {
    top: 15vh;
    left: 50%;
    transform: translateX(-50%);
    width: 400px;
    z-index: 10;
    text-align: center;
    animation: struggle-text 4s ease-in-out infinite alternate;
}

.back-link {
    top: 5vh;
    left: 5vw;
    z-index: 10;
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border: 1px solid var(--text-secondary);
    color: var(--text-secondary);
    text-decoration: none;
    animation: struggle-link 6s ease-in-out infinite alternate;
}
.back-link span {
    margin-left: 0.5rem;
}

/* Animations for being sucked in */
@keyframes struggle-text {
    from {
        transform: translateX(-50%) scale(1) rotate(0deg);
    }
    to {
        transform: translateX(-50%) translateY(20vh) scale(0.8) rotate(5deg);
    }
}
@keyframes struggle-link {
    from {
        transform: scale(1) rotate(0deg);
    }
    to {
        transform: scale(0.9) rotate(-3deg) translate(10vw, 10vh);
    }
}

#frag1 { animation: struggle-frag 10s 0.5s ease-in-out infinite alternate; }
#frag2 { animation: struggle-frag 12s 0.2s ease-in-out infinite alternate; }
#frag3 { animation: struggle-frag 9s 0.8s ease-in-out infinite alternate; }
#frag4 { animation: struggle-frag 11s 0s ease-in-out infinite alternate; }

@keyframes struggle-frag {
    from {
        transform: scale(1) rotate(0deg);
    }
    to {
        transform: translate(5vw, 5vh) scale(0.95) rotate(15deg);
    }
}